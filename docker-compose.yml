version: "3.8"

services:
  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    tty: true
    ports:
      - "8000:80"
    volumes:
      - ../src:/var/www/app
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
      - mysql
    networks:
      - php_framework_network
    deploy:
      resources:
        limits:
          memory: 256M

  mysql:
    platform: linux/amd64
    image: mysql:8.0
    container_name: mysql
    restart: unless-stopped
    tty: true
    ports:
      - "${MYSQL_HOST_PORT}:${MYSQL_DOCKER_CONTAINER_PORT}"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - ./mysql:/var/lib/mysql
    networks:
      - php_framework_network
    deploy:
      resources:
        limits:
          memory: 512M

  php:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: php
    restart: unless-stopped
    tty: true
    volumes:
      - ../src:/var/www/app
      - ./php/custom.ini:/usr/local/etc/php/conf.d/custom.ini
    ports:
      - "9000:9000"
    networks:
      - php_framework_network
    deploy:
      resources:
        limits:
          memory: 512M

  redis:
    image: redis:alpine
    container_name: redis
    command: redis-server --appendonly yes --requirepass "${REDIS_PASSWORD}"
    ports:
      - "6379:6379"
    networks:
      - php_framework_network
    deploy:
      resources:
        limits:
          memory: 256M

  rabbitmq:
    image: "rabbitmq:management"
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_LOGIN}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    networks:
      - php_framework_network
    deploy:
      resources:
        limits:
          memory: 512M

networks:
  php_framework_network:
    driver: bridge
